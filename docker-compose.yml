version: "3.8"

networks:
  #   monitoring_network:
  monitoring:

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    ports:
      - 9100:9100
    networks:
      - monitoring
  # # External Node.js container (assuming it exposes metrics on port 8080)
  # node-app-external:
  #   image: your-nodejs-image:latest
  #   networks:
  #     - monitoring_network
  #   # Modify other configurations specific to your app

  # node-exporter:
  #   image: quay.io/prometheus/node-exporter:latest
  #   networks:
  #     - monitoring_network
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #   command:
  #     - "--path.rootfs=/host"
  # node_exporter:
  #   image: quay.io/prometheus/node-exporter:latest
  #   container_name: node_exporter
  #   command:
  #     - "--path.rootfs=/host"
  #   # network_mode: host

  #   pid: host
  #   restart: unless-stopped
  #   volumes:
  #     - "/:/host:ro,rslave"
  #   networks:
  #     - monitoring_network

  sql_exporter:
    image: githubfree/sql_exporter:latest
    container_name: sql_exporter
    command: ["--config.file=/etc/sql-exporter/sql-exporter.yaml"]
    volumes:
      - ./etc/sql-exporter:/etc/sql-exporter
    ports:
      - 9399:9399
    networks:
      - monitoring
    # depends_on:
    #   mssql:
    #     condition: service_healthy

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #     # - "9090:9090/tcp" # Optional for Prometheus scraping itself
  #   volumes:
  #     - ./etc/prometheus.yaml:/etc/prometheus.yaml
  #   entrypoint:
  #     - /bin/prometheus
  #     - --config.file=/etc/prometheus.yaml
  #   # networks:
  #   #   - monitoring_network
  #   # depends_on:
  #   - node_exporter
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./etc/prometheus.yaml:/etc/prometheus.yaml
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus.yaml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.3.1
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./data/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./data/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring
    depends_on:
      # - prometheus
      - sql_exporter
